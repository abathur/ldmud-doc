.. efun:: string process_string(string str)
  :optional:

  Searches string :arg:`str` for occurences of a "value by function call", which is an implicit function call surrounded by ``@@``. The value should contain a string like this::

    @@function[:filename][|arg|arg]@@

  ``function`` must return a string or else the string which should be processed will be returned unchanged. Both the filename and the args are optional.

  .. caution:: This does not recurse over returned replacement values. If a function returns another function description, that description will not be replaced.

  Consecutive function calls can be written adjacent::

    @@function1@@function2@@

  .. security:: Using :efun:`process_string` can lead to severe security problems.

  .. todo:: we should really expound on the security problems a little so that less-informed admins can evaluate the risk they're opening themselves up to and what if any countermeasures they should take.

  .. usage::

    Given the below example, calling ``func()`` will print out the string "abcdef"::

      string foo(string str) {
         return "ab"+str+"ef";
      }
      void func() {
         write(process_string("@@foo|cd@@")+"\n");
      }

  :history 3.2.1@34 changed: Because of the security problems, process_string() is an optional efun.
  :history 3.3.160 changed: removed the undocumented 'feature' that a function call declaration could be terminated by a space. In turn this now allows the use of arguments with spaces.

  .. seealso:: :efun:`notify_fail`, :type:`closure`, :master:`get_bb_uid`
