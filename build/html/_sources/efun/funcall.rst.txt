.. efun:: mixed funcall(closure cl, mixed arg ...)

  Evaluates the closure. The extra args will be passed as args to the closure. If cl is not a closure, it will simply be returned.

  .. usage::

    ::

      mixed eval(object ob, string func, mixed *args)
      {
          return funcall(#'call_other, ob, func, args);
      }

    This will result in calling::

        ob->func(args).

    In combination with the '...' operator, the functionality of :efun:`apply` can be implemented::

      mixed eval(object ob, string func, mixed *args)
      {
          return funcall(#'call_other, ob, func, args...);
      }

    will result in calling::

      ob->func(args[0],args[1],...,args[sizeof(args)-1])

  :history 3.2@70 introduced:
  :history 3.2.1 changed: returns a non-closure unchanged even when args are given.

  .. seealso:: :efun:`apply`, :efun:`quote`
