.. efun:: mixed function_exists(string str)
  mixed function_exists(string str, int flags)
  mixed function_exists(string str, object ob)
  mixed function_exists(string str, object ob, int flags)
  :include: <functionlist.h>

  Look up a function :arg:`str` in the current object, respectively in the object :arg:`ob`. Depending on the value of :arg:`flags`, one of the following informations is returned:

  :arg:`flags` == :macro:`FEXISTS_PROGNAME` (0, default):
    Return the name of the program the function is defined in. This can be either ``object_name(ob)``, or the name of an inherited program. If !compat mode, the returned name always begins with a '/'.

  :arg:`flags` == :macro:`FEXISTS_FILENAME` (1):
    Return the name of the file the function is defined in (this may be an include file). If !compat mode, the returned name always begins with a '/'.

  :arg:`flags` == :macro:`FEXISTS_LINENO` (2):
    Return the line number within the source file.

  :arg:`flags` == :macro:`FEXISTS_ALL` (3):
    Return an array with all the above information, plus information about the function type/flags/number of arguments.

    The returned array contains this information:
      string [:macro:`FEXISTS_PROGNAME`]: the program name
      string [:macro:`FEXISTS_FILENAME`]: the filename
      int    [:macro:`FEXISTS_LINENO`]:   the linenumber
      int    [:macro:`FEXISTS_NUMARG`]:   the number of arguments to the function
      int    [:macro:`FEXISTS_TYPE`]:     the return type of the function
      int    [:macro:`FEXISTS_FLAGS`]:    the function flags

  The :arg:`flags` value can be or-ed to :macro:`NAME_HIDDEN` to return information about static and protected functions in other objects. It is not possible to return information about private functions.

  .. todo:: also use of :arg:`flags` in the definition lists above...

  If the function cannot be found (because it doesn't exist or it is not visible to the caller), the result is 0.

  .. usage::

    ::

      function_exists("create")
      function_exists("create", that_object, NAME_HIDDEN|FEXISTS_ALL);

  :history 3.2.10 changed: broadened the range of returned values and introduced the :arg:`flags` argument.
  :history 3.2.12/3.3.713 changed: added the function type/flags/number of arguments to the result of :macro:`FEXISTS_ALL`.

  .. seealso:: :efun:`call_other`, :efun:`call_resolved`, :efun:`functionlist`, :efun:`variable_exists`
