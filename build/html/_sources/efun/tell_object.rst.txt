.. efun:: void tell_object(object|string ob, string str)
  void tell_object(object|string ob, mixed *|mapping|struct|object msg)

  Send a message :arg:`str` to object :arg:`ob` (which is looked up and loaded by given name if necessary).

  If the second argument is a string, the message will be printed to :arg:`ob` if it is an interactive user, otherwise it will be passed to the lfun :applied:`catch_tell` on the target living object.

  If the second argument is an array/mapping/struct/object, it will be passed to the lfun :applied:`catch_msg` on the target.

  .. usage::

    Just tell Wessex a simple "Hi!"::

      object who;
      who = find_player("wessex");
      tell_object(who, "Hi!\n");

    This examples shows how :efun:`tell_room` works with :applied:`catch_tell`:

      Object 1 (living with the name "dummymonster")::

        void catch_tell(string str) {
          write("Received: "+str+"\n");
        }

      Object 2::

        void func() {
          object who;
          who=find_living("dummymonster");
          tell_object(who, "Follow me, mortal one!\n");
          ...
        }

  :history 3.2.11 changed: added the 'mixed *' form for symmetry reasons.
  :history 3.3.686 changed: added the use of a mapping/struct/object as second argument.

  .. seealso:: :efun:`write`, :efun:`say`, :applied:`catch_tell`, :applied:`catch_msg`
