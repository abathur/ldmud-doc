.. efun:: int execute_command(string command, object origin, object player)

  Low-level access to the command parser: take the :arg:`command`, parse it into verb and argument and call the appropriate action added to :arg:`origin` (read: :arg:`origin` is the object 'issuing' the command). For the execution of the function(s), ``this_player()`` is set to player. The function also sets results of ``query_command()`` and ``query_verb()`` to match the given :arg:`command`.

  The result is non-0 if the command was found and execute, and 0 otherwise.

  The efun raises a privilege violation ("execute_command", this_object(), origin, command).

  .. todo: privilege violation

  Note that this function does not use the :hook:`H_MODIFY_COMMAND` and :hook:`H_NOTIFY_FAIL` hooks; :efun:`notify_fail` is can be used, but must be evaluated by the caller.

  :history 3.2.7 introduced:

  .. seealso:: :overview:`hook`, :efun:`match_command`, :efun:`command`, :efun:`notify_fail`, :efun:`command_stack`
