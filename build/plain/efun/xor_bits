SYNOPSIS
========
   string xor_bits(string str1, string str2)

DESCRIPTION
===========
   str1(E) and str2(E) are both bitstrings. The result of the function is a 
   bitstring with the binary-xor of str1(E) and str2(E), ie. a string in which
   a bit is set only if the corresponding bits in either str1(E) or str2(E) 
   (but not both) is set.

   USAGE
   =====
      The below example demonstrates how xor_bits(E) cancels out the bit 
      common to s1 and s2, but retains bits present only in one string:

         string s1, s2, s3;

         s1 = set_bit("", 3);
         s1 = set_bit(s1, 15);  // s1 is "( (", bits 3 and 15

         s2 = set_bit("", 3);
         s2 = set_bit(s2, 4);   // s2 is "8", bits 3 and 4

         s3 = xor_bits(s1, s2); // s3 is "0 (", bits 4 and 15

SEE ALSO
========
   clear_bit(E), set_bit(E), test_bit(E), next_bit(E), last_bit(E), 
   count_bits(E), and_bits(E), or_bits(E), invert_bits(E), copy_bits(E)
